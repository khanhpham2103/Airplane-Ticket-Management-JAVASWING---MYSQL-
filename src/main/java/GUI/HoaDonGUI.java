package GUI;

import BUS.HoaDonBUS;
import DTO.invoiceDetailDTO;
import DTO.HoaDonDTO;
import GUISupport.TableDark;
import GUISupport.jpanelGradient;
import java.awt.Font;
import java.awt.Toolkit;
import java.awt.event.ActionEvent;
import java.awt.event.FocusAdapter;
import java.awt.event.FocusEvent;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.AbstractAction;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.JTextField;
import javax.swing.table.DefaultTableModel;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
/**
 *
 * @author PHAM PHU KHANH
 */
public class HoaDonGUI extends javax.swing.JFrame {

    /**
     * Creates new form QLHDFrame
     */
    public HoaDonGUI() throws Exception {
        initComponents();
//        Insert();
        addToComboBox();
        CreateHeader();
        list();
        setLocationRelativeTo(null);
    }

    public void CreateHeader() {
        Vector header = new Vector();
        header.add("Mã hóa đơn");
        header.add("Nhân viên");
        header.add("Khách hàng");
        header.add("Tổng tiền");
        header.add("Thời gian");
        if (model.getRowCount() == 0) {
            model = new DefaultTableModel(header, 0);
        }
        tbl.setModel(model);
    }

    public void ShowModel(DefaultTableModel md, ArrayList<HoaDonDTO> hdArrList) {
        Vector data;
        model.setRowCount(0);
        for (HoaDonDTO n : hdArrList) {
            data = new Vector();
            data.add(n.getInvoiceID());
            data.add(n.getStaffID());
            data.add(n.getCustomerID());
            data.add(n.getInvoiceTotal());
            data.add(n.getInvoicedDateTime());
            md.addRow(data);
        }
        tbl.setModel(md);
    }

    public void list() {
        // Nếu mà có dữ liệu hiện tại thì dùng lun , không có thì kéo db lên
        if (bus.getList() == null) {
            bus.list();
        }
        ShowModel(model, bus.getList());
    }

//    private void Insert() {
//        ArrAtribute[0] = "hdID";
//        ArrAtribute[1] = "departureLocation";
//        ArrAtribute[2] = "arrivalLocation";
//    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        invoiceDetail = new javax.swing.JFrame();
        detailPanel = new javax.swing.JPanel();
        invoiceDetailLB = new javax.swing.JLabel();
        tablePnl = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        invoiceDetailtbl = new javax.swing.JTable();
        invoiceTotalLabel = new javax.swing.JLabel();
        invoiceTotalField = new javax.swing.JTextField();
        OKbtn = new javax.swing.JButton();
        backgroundPanel = new jpanelGradient();
        informationPanel = new javax.swing.JPanel();
        invoiceIDLabel = new javax.swing.JLabel();
        staffLabel = new javax.swing.JLabel();
        totalLabel = new javax.swing.JLabel();
        txtTotal = new javax.swing.JTextField();
        txtInvoiceID = new javax.swing.JTextField();
        timeLabel = new javax.swing.JLabel();
        txtTime = new javax.swing.JTextField();
        customerLabel = new javax.swing.JLabel();
        staffComboBox = new javax.swing.JComboBox<>();
        customerComboBox = new javax.swing.JComboBox<>();
        functionPanel = new javax.swing.JPanel();
        btnUpdate = new javax.swing.JButton();
        btnDel = new javax.swing.JButton();
        btnStat = new javax.swing.JButton();
        btnShow = new javax.swing.JButton();
        btnEmpty = new javax.swing.JButton();
        btnBack = new javax.swing.JButton();
        QLHDPanel = new javax.swing.JPanel();
        QLCBLabel = new javax.swing.JLabel();
        tablePanel = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbl = new TableDark();
        searchWarning = new javax.swing.JLabel();
        txtFind = new javax.swing.JTextField();
        btnFind = new javax.swing.JButton();
        dataFieldCB = new javax.swing.JComboBox<>();
        btnDetail = new javax.swing.JButton();

        invoiceDetail.setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        invoiceDetail.setSize(new java.awt.Dimension(700, 370));

        invoiceDetailLB.setFont(new java.awt.Font("Segoe UI", 0, 36)); // NOI18N
        invoiceDetailLB.setText("Chi tiết hóa đơn");

        javax.swing.GroupLayout detailPanelLayout = new javax.swing.GroupLayout(detailPanel);
        detailPanel.setLayout(detailPanelLayout);
        detailPanelLayout.setHorizontalGroup(
            detailPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(detailPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(invoiceDetailLB)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        detailPanelLayout.setVerticalGroup(
            detailPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(detailPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(invoiceDetailLB)
                .addContainerGap(15, Short.MAX_VALUE))
        );

        invoiceDetailtbl.setFont(new java.awt.Font("Segoe UI", 0, 18));
        invoiceDetailtbl.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Mã hóa đơn", "Loại vé", "Giá", "Số lượng", "Tổng tiền"
            }
        ));
        invoiceDetailtbl.setRowHeight(tbl.getRowHeight() + 15);
        invoiceDetailtbl.getTableHeader().setFont(new Font("Segoe UI", 1 , 16));
        invoiceDetailtbl.setAutoResizeMode(JTable.AUTO_RESIZE_LAST_COLUMN);
        jScrollPane2.setViewportView(invoiceDetailtbl);

        invoiceTotalLabel.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        invoiceTotalLabel.setText("Thành tiền:");

        invoiceTotalField.setEditable(false);
        invoiceTotalField.setBackground(new java.awt.Color(204, 204, 204));
        invoiceTotalField.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N

        OKbtn.setText("OK");
        OKbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                OKbtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout tablePnlLayout = new javax.swing.GroupLayout(tablePnl);
        tablePnl.setLayout(tablePnlLayout);
        tablePnlLayout.setHorizontalGroup(
            tablePnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(tablePnlLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(tablePnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2)
                    .addGroup(tablePnlLayout.createSequentialGroup()
                        .addComponent(invoiceTotalLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(invoiceTotalField, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(tablePnlLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(OKbtn, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        tablePnlLayout.setVerticalGroup(
            tablePnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(tablePnlLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 123, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(tablePnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(invoiceTotalLabel)
                    .addComponent(invoiceTotalField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(OKbtn)
                .addGap(22, 22, 22))
        );

        javax.swing.GroupLayout invoiceDetailLayout = new javax.swing.GroupLayout(invoiceDetail.getContentPane());
        invoiceDetail.getContentPane().setLayout(invoiceDetailLayout);
        invoiceDetailLayout.setHorizontalGroup(
            invoiceDetailLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(invoiceDetailLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(invoiceDetailLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(invoiceDetailLayout.createSequentialGroup()
                        .addGap(0, 218, Short.MAX_VALUE)
                        .addComponent(detailPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 218, Short.MAX_VALUE))
                    .addComponent(tablePnl, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        invoiceDetailLayout.setVerticalGroup(
            invoiceDetailLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(invoiceDetailLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(detailPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(tablePnl, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Quản lý hóa đơn");
        setBackground(new java.awt.Color(0, 153, 255));

        backgroundPanel.setBackground(new java.awt.Color(0, 153, 255));
        backgroundPanel.setPreferredSize(new java.awt.Dimension(1000, 688));

        informationPanel.setBackground(new java.awt.Color(0, 153, 255));
        informationPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Thông tin hóa đơn", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 3, 24), new java.awt.Color(255, 255, 255))); // NOI18N
        informationPanel.setOpaque(false);

        invoiceIDLabel.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        invoiceIDLabel.setForeground(new java.awt.Color(255, 255, 255));
        invoiceIDLabel.setText("Mã hóa đơn:");
        invoiceIDLabel.setToolTipText("");

        staffLabel.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        staffLabel.setForeground(new java.awt.Color(255, 255, 255));
        staffLabel.setText("Nhân viên lập:");
        staffLabel.setToolTipText(" ");

        totalLabel.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        totalLabel.setForeground(new java.awt.Color(255, 255, 255));
        totalLabel.setText("Tổng tiền:");

        txtTotal.setEditable(false);
        txtTotal.setBackground(new java.awt.Color(204, 204, 204));
        txtTotal.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        txtTotal.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtTotalFocusLost(evt);
            }
        });

        txtInvoiceID.setEditable(false);
        txtInvoiceID.setBackground(new java.awt.Color(204, 204, 204));
        txtInvoiceID.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        txtInvoiceID.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtInvoiceIDFocusLost(evt);
            }
        });

        timeLabel.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        timeLabel.setForeground(new java.awt.Color(255, 255, 255));
        timeLabel.setText("Thời gian:");

        txtTime.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N

        customerLabel.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        customerLabel.setForeground(new java.awt.Color(255, 255, 255));
        customerLabel.setText("Khách hàng:");

        staffComboBox.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        staffComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "--Chọn nhân viên lập hóa đơn" }));

        customerComboBox.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        customerComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "--Chọn khách hàng thanh toán" }));

        javax.swing.GroupLayout informationPanelLayout = new javax.swing.GroupLayout(informationPanel);
        informationPanel.setLayout(informationPanelLayout);
        informationPanelLayout.setHorizontalGroup(
            informationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(informationPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(informationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(informationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(staffLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(invoiceIDLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(customerLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(totalLabel)
                    .addComponent(timeLabel))
                .addGap(18, 18, 18)
                .addGroup(informationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtTotal, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(customerComboBox, javax.swing.GroupLayout.Alignment.TRAILING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(txtInvoiceID)
                    .addComponent(staffComboBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(txtTime))
                .addContainerGap())
        );
        informationPanelLayout.setVerticalGroup(
            informationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(informationPanelLayout.createSequentialGroup()
                .addContainerGap(17, Short.MAX_VALUE)
                .addGroup(informationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtInvoiceID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(invoiceIDLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(informationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(staffComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(staffLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(informationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(customerComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(customerLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(informationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtTotal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(totalLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(informationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtTime, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(timeLabel))
                .addGap(0, 8, Short.MAX_VALUE))
        );

        functionPanel.setBackground(new java.awt.Color(0, 153, 255));
        functionPanel.setOpaque(false);

        btnUpdate.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnUpdate.setText("Sửa hóa đơn");
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });

        btnDel.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnDel.setText("Xóa hóa đơn");
        btnDel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDelActionPerformed(evt);
            }
        });

        btnStat.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnStat.setText("Thống kê");
        btnStat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnStatActionPerformed(evt);
            }
        });

        btnShow.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnShow.setText("Xem danh sách");
        btnShow.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnShowActionPerformed(evt);
            }
        });

        btnEmpty.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnEmpty.setText("Làm rỗng thông tin");
        btnEmpty.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEmptyActionPerformed(evt);
            }
        });

        btnBack.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnBack.setText("Quay lại");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout functionPanelLayout = new javax.swing.GroupLayout(functionPanel);
        functionPanel.setLayout(functionPanelLayout);
        functionPanelLayout.setHorizontalGroup(
            functionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(functionPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(functionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnShow, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnUpdate, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnDel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnStat, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnEmpty, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnBack, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        functionPanelLayout.setVerticalGroup(
            functionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(functionPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnShow)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnDel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnUpdate)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnEmpty)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnStat)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnBack)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        QLHDPanel.setBackground(new java.awt.Color(0, 153, 255));
        QLHDPanel.setOpaque(false);

        QLCBLabel.setBackground(new java.awt.Color(0, 153, 255));
        QLCBLabel.setFont(new java.awt.Font("Segoe UI", 1, 36)); // NOI18N
        QLCBLabel.setForeground(new java.awt.Color(255, 255, 255));
        QLCBLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        QLCBLabel.setText("Quản lý hóa đơn");

        javax.swing.GroupLayout QLHDPanelLayout = new javax.swing.GroupLayout(QLHDPanel);
        QLHDPanel.setLayout(QLHDPanelLayout);
        QLHDPanelLayout.setHorizontalGroup(
            QLHDPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(QLHDPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(QLCBLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 345, Short.MAX_VALUE)
                .addContainerGap())
        );
        QLHDPanelLayout.setVerticalGroup(
            QLHDPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(QLHDPanelLayout.createSequentialGroup()
                .addComponent(QLCBLabel)
                .addGap(0, 12, Short.MAX_VALUE))
        );

        tablePanel.setBackground(new java.awt.Color(0, 153, 255));
        tablePanel.setOpaque(false);

        tbl.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        tbl.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Mã hóa đơn", "Nhân viên lập", "Khách hàng", "Tổng tiền", "Thời gian"
            }
        ));
        tbl.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblMouseClicked(evt);
            }
        });
        tbl.setRowHeight(tbl.getRowHeight() + 15);
        tbl.getTableHeader().setFont(new Font("Segoe UI", 1 , 16));
        tbl.setAutoResizeMode(JTable.AUTO_RESIZE_LAST_COLUMN);
        jScrollPane1.setViewportView(tbl);

        searchWarning.setFont(new java.awt.Font("Segoe UI", 3, 14)); // NOI18N
        searchWarning.setForeground(new java.awt.Color(204, 0, 51));
        searchWarning.setText("Không có thông tin bạn cần tìm hoặc đã nhập sai");

        txtFind.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtFindActionPerformed(evt);
            }
        });

        btnFind.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnFind.setText("Tìm kiếm");
        btnFind.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFindActionPerformed(evt);
            }
        });

        dataFieldCB.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        dataFieldCB.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "--Chọn tiêu chí", "Mã hóa đơn", "Nhân viên", "Khách hàng" }));
        dataFieldCB.setSelectedIndex(0);

        btnDetail.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnDetail.setText("Xem chi tiết");
        btnDetail.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDetailActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout tablePanelLayout = new javax.swing.GroupLayout(tablePanel);
        tablePanel.setLayout(tablePanelLayout);
        tablePanelLayout.setHorizontalGroup(
            tablePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(tablePanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(tablePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(tablePanelLayout.createSequentialGroup()
                        .addComponent(dataFieldCB, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtFind, javax.swing.GroupLayout.PREFERRED_SIZE, 205, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnFind)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(searchWarning, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnDetail)))
                .addContainerGap())
        );
        tablePanelLayout.setVerticalGroup(
            tablePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(tablePanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(tablePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(dataFieldCB, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(tablePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(searchWarning, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btnFind)
                        .addComponent(txtFind, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btnDetail)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 263, Short.MAX_VALUE)
                .addContainerGap())
        );

        searchWarning.setVisible(false);

        javax.swing.GroupLayout backgroundPanelLayout = new javax.swing.GroupLayout(backgroundPanel);
        backgroundPanel.setLayout(backgroundPanelLayout);
        backgroundPanelLayout.setHorizontalGroup(
            backgroundPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(backgroundPanelLayout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(backgroundPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(backgroundPanelLayout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(informationPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(18, 18, 18)
                        .addComponent(functionPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(backgroundPanelLayout.createSequentialGroup()
                        .addComponent(QLHDPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(tablePanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(15, 15, 15))
        );
        backgroundPanelLayout.setVerticalGroup(
            backgroundPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(backgroundPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(QLHDPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(backgroundPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(backgroundPanelLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(informationPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, backgroundPanelLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(functionPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(52, 52, 52)))
                .addComponent(tablePanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(9, 9, 9))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(backgroundPanel, javax.swing.GroupLayout.DEFAULT_SIZE, 949, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(backgroundPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnStatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnStatActionPerformed
        statisticsGUI stat = new statisticsGUI();
        stat.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_btnStatActionPerformed

    private void tblMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblMouseClicked
        int i = tbl.getSelectedRow();
        txtInvoiceID.setText((String) tbl.getModel().getValueAt(i, 0));
        for (int j = 0; j < staffComboBox.getItemCount(); j++) {
            String cbID = staffComboBox.getItemAt(j).substring(0, 4);
            String tblID = (String) tbl.getModel().getValueAt(i, 1);
            if (cbID.equals(tblID.substring(0, 4))) {
                staffComboBox.setSelectedIndex(j);
            }
        }
        for (int j = 0; j < customerComboBox.getItemCount(); j++) {
            String cbID = customerComboBox.getItemAt(j).substring(0, 5);
            String tblID = (String) tbl.getModel().getValueAt(i, 2);
            if (cbID.equals(tblID.substring(0, 5))) {
                customerComboBox.setSelectedIndex(j);
            }
        }
        txtTotal.setText(String.valueOf(tbl.getModel().getValueAt(i, 3)));
        txtTime.setText((String) tbl.getModel().getValueAt(i, 4));
    }//GEN-LAST:event_tblMouseClicked

    private void btnShowActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnShowActionPerformed
        list();
        ShowModel(model, bus.getList());
    }//GEN-LAST:event_btnShowActionPerformed

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        String invoiceID = txtInvoiceID.getText();
        String staffInfo = staffComboBox.getItemAt(staffComboBox.getSelectedIndex());
        String staffID = staffInfo.substring(0, 4);
        String customerInfo = customerComboBox.getItemAt(customerComboBox.getSelectedIndex());
        String customerID = customerInfo.substring(0, 5);
        long invoiceTotal = Long.parseLong(txtTotal.getText());
        String invoiceDateTime = txtTime.getText();
        if (staffComboBox.getSelectedIndex() == 0 || customerComboBox.getSelectedIndex() == 0) {
            JOptionPane.showMessageDialog(null, "Chưa chọn nhân viên hoặc khách hàng");
        } else {
            HoaDonDTO hdDTO = new HoaDonDTO(invoiceID, staffID, customerID, invoiceTotal, invoiceDateTime);
            bus.set(hdDTO);
            ShowModel(model, bus.getList());
        }
    }//GEN-LAST:event_btnUpdateActionPerformed

    private void btnDelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDelActionPerformed
        bus.delete(txtInvoiceID.getText());
        ShowModel(model, bus.getList());
    }//GEN-LAST:event_btnDelActionPerformed

    private void searchInvoiceID() {
        model.setRowCount(0);
        for (int i = 0; i < bus.getList().size(); i++) {
            if (bus.getList().get(i).getInvoiceID().toLowerCase().equals(txtFind.getText().toLowerCase())) {
                HoaDonDTO hdTemp = bus.getList().get(i);
                Vector data = new Vector();
                data.add(hdTemp.getInvoiceID());
                data.add(hdTemp.getStaffID());
                data.add(hdTemp.getCustomerID());
                data.add(hdTemp.getInvoiceTotal());
                data.add(hdTemp.getInvoicedDateTime());
                model.addRow(data);
            }
        }
        if(model.getRowCount() == 0){
            searchWarning.setVisible(true);
            searchWarning.setText("Không có thông tin bạn cần tìm hoặc đã nhập sai");
        }
        else{
            searchWarning.setVisible(true);
            searchWarning.setText("Có "+model.getRowCount()+" kết quả");
            tbl.setModel(model);
        }
    }

    private void searchCustomer() {
        model.setRowCount(0);
        String cbID = "";
        for (int i = 0; i < customerComboBox.getItemCount(); i++) {
            if (customerComboBox.getItemAt(i).toLowerCase().contains(txtFind.getText().toLowerCase())) {
                cbID = customerComboBox.getItemAt(i);
                for (int j = 0; j < bus.getList().size(); j++) {
                    if (bus.getList().get(j).getCustomerID().equals(cbID.substring(0, 5))) {
                        HoaDonDTO hdTemp = bus.getList().get(j);
                        Vector data = new Vector();
                        data.add(hdTemp.getInvoiceID());
                        data.add(hdTemp.getStaffID());
                        data.add(cbID);
                        data.add(hdTemp.getInvoiceTotal());
                        data.add(hdTemp.getInvoicedDateTime());
                        model.addRow(data);
                    }
                }
            }
        }
        if(model.getRowCount() == 0){
            searchWarning.setVisible(true);
            searchWarning.setText("Không có thông tin bạn cần tìm hoặc đã nhập sai");
        }
        else{
            searchWarning.setVisible(true);
            searchWarning.setText("Có "+model.getRowCount()+" kết quả");
            tbl.setModel(model);
        }
    }

    private void searchStaff() {
        model.setRowCount(0);
        String cbID = "";
        for (int i = 0; i < staffComboBox.getItemCount(); i++) {
            if (staffComboBox.getItemAt(i).toLowerCase().contains(txtFind.getText().toLowerCase())) {
                cbID = staffComboBox.getItemAt(i);
                for (int j = 0; j < bus.getList().size(); j++) {
                    if (bus.getList().get(j).getStaffID().equals(cbID.substring(0, 4))) {
                        HoaDonDTO hdTemp = bus.getList().get(j);
                        Vector data = new Vector();
                        data.add(hdTemp.getInvoiceID());
                        data.add(cbID);
                        data.add(hdTemp.getCustomerID());
                        data.add(hdTemp.getInvoiceTotal());
                        data.add(hdTemp.getInvoicedDateTime());
                        model.addRow(data);
                    }
                }
            }
        }
        if(model.getRowCount() == 0){
            searchWarning.setVisible(true);
            searchWarning.setText("Không có thông tin bạn cần tìm hoặc đã nhập sai");
        }
        else{
            searchWarning.setVisible(true);
            searchWarning.setText("Có "+model.getRowCount()+" kết quả");
            tbl.setModel(model);
        }
    }

    private void btnFindActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFindActionPerformed
        txtFindActionPerformed(evt);
    }//GEN-LAST:event_btnFindActionPerformed

    private void txtInvoiceIDFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtInvoiceIDFocusLost
//        id = 0;
//        ShowTextFieldWhere(id, txtInvoiceID.getText());
    }//GEN-LAST:event_txtInvoiceIDFocusLost

    private void txtTotalFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtTotalFocusLost
//        id = 2;
//        ShowTextFieldWhere(id, txtTotal.getText());
    }//GEN-LAST:event_txtTotalFocusLost

    private void btnEmptyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEmptyActionPerformed
        txtInvoiceID.setText("");
        staffComboBox.setSelectedIndex(0);
        customerComboBox.setSelectedIndex(0);
        txtTotal.setText("");
        txtTime.setText("");
        dataFieldCB.setSelectedIndex(0);
    }//GEN-LAST:event_btnEmptyActionPerformed

    private void txtFindActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtFindActionPerformed

        switch (dataFieldCB.getSelectedIndex()) {
            case 0:
                JOptionPane.showMessageDialog(null, "Vui lòng chọn tiêu chí bạn cần tìm");
                break;
            case 1:
                searchInvoiceID();
                break;
            case 2:
                searchStaff();
                break;
            case 3:
                searchCustomer();
                break;
        }
    }//GEN-LAST:event_txtFindActionPerformed

    private void btnDetailActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDetailActionPerformed
        DefaultTableModel invoiceDetailMD = new DefaultTableModel();
        invoiceDetailLB.setText("Chi tiết hóa đơn" + ": "+txtInvoiceID.getText());
        invoiceTotalField.setText(txtTotal.getText());
        Vector header = new Vector();
        header.add("Mã hóa đơn");
        header.add("Loại vé");
        header.add("Giá");
        header.add("Số lượng");
        header.add("Tổng tiền");
        if (invoiceDetailMD.getRowCount() == 0) {
            invoiceDetailMD = new DefaultTableModel(header, 0);
        }
        invoiceDetailtbl.setModel(model);
        for(invoiceDetailDTO cthd : bus.getInvoiceDetail(txtInvoiceID.getText())){
            Vector data = new Vector();
            data.add(cthd.getInvoiceID());
            data.add(cthd.getTypeID());
            if(cthd.getTypeID().equals("BUS")){
                data.add("5000000");
            }else if (cthd.getTypeID().equals("ECO")){
                data.add("2500000");
            }
            data.add(cthd.getAmount());
            data.add((long)cthd.getTotal());
            invoiceDetailMD.addRow(data);
        }
        invoiceDetailtbl.setModel(invoiceDetailMD);
        invoiceDetail.setVisible(true);
        invoiceDetail.setLocationRelativeTo(null);
    }//GEN-LAST:event_btnDetailActionPerformed

    private void OKbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_OKbtnActionPerformed
        closeFrame(invoiceDetail);
    }//GEN-LAST:event_OKbtnActionPerformed

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        int result = JOptionPane.showConfirmDialog(this,"Quay lại menu chính?","Xác nhận quay lại",JOptionPane.YES_NO_OPTION);
        if(result == JOptionPane.YES_OPTION){
            MENU menu = new MENU();
            menu.setVisible(true);
            closeFrame(this);
        }
    }//GEN-LAST:event_btnBackActionPerformed
    private void closeFrame(JFrame frame) {
        WindowEvent closeWindow = new WindowEvent(frame, WindowEvent.WINDOW_CLOSING);
        Toolkit.getDefaultToolkit().getSystemEventQueue().postEvent(closeWindow);
    }
    
    private void addToComboBox() {
        for (String h : bus.getStaffID()) {
            staffComboBox.addItem(h);
        }
        for (String h : bus.getCustomerID()) {
            customerComboBox.addItem(h);
        }
    }

    /**
     * @param args the command line arguments
     */
//    public static void main(String args[]) {
//        /* Set the Nimbus look and feel */
//        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
//        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
//         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
//         */
//        try {
//            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
//                if ("Nimbus".equals(info.getName())) {
//                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
//                    break;
//                }
//            }
//        } catch (ClassNotFoundException ex) {
//            java.util.logging.Logger.getLogger(HoaDonGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (InstantiationException ex) {
//            java.util.logging.Logger.getLogger(HoaDonGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (IllegalAccessException ex) {
//            java.util.logging.Logger.getLogger(HoaDonGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
//            java.util.logging.Logger.getLogger(HoaDonGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        }
//        //</editor-fold>
//        //</editor-fold>
//
//
//
//        /* Create and display the form */
//        java.awt.EventQueue.invokeLater(new Runnable() {
//            @Override
//            public void run() {
//                try {
//                    new HoaDonGUI().setVisible(true);
//                } catch (Exception ex) {
//                    Logger.getLogger(HoaDonGUI.class.getName()).log(Level.SEVERE, null, ex);
//                }
//            }
//        });
//
//    }

//    private String[] ArrAtribute = new String[4];
//    private int id = -1;
    private DefaultTableModel model = new DefaultTableModel();
    private HoaDonBUS bus = new HoaDonBUS();
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton OKbtn;
    private javax.swing.JLabel QLCBLabel;
    private javax.swing.JPanel QLHDPanel;
    private javax.swing.JPanel backgroundPanel;
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnDel;
    private javax.swing.JButton btnDetail;
    private javax.swing.JButton btnEmpty;
    private javax.swing.JButton btnFind;
    private javax.swing.JButton btnShow;
    private javax.swing.JButton btnStat;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JComboBox<String> customerComboBox;
    private javax.swing.JLabel customerLabel;
    private javax.swing.JComboBox<String> dataFieldCB;
    private javax.swing.JPanel detailPanel;
    private javax.swing.JPanel functionPanel;
    private javax.swing.JPanel informationPanel;
    private javax.swing.JFrame invoiceDetail;
    private javax.swing.JLabel invoiceDetailLB;
    private javax.swing.JTable invoiceDetailtbl;
    private javax.swing.JLabel invoiceIDLabel;
    private javax.swing.JTextField invoiceTotalField;
    private javax.swing.JLabel invoiceTotalLabel;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel searchWarning;
    private javax.swing.JComboBox<String> staffComboBox;
    private javax.swing.JLabel staffLabel;
    private javax.swing.JPanel tablePanel;
    private javax.swing.JPanel tablePnl;
    private javax.swing.JTable tbl;
    private javax.swing.JLabel timeLabel;
    private javax.swing.JLabel totalLabel;
    private javax.swing.JTextField txtFind;
    private javax.swing.JTextField txtInvoiceID;
    private javax.swing.JTextField txtTime;
    private javax.swing.JTextField txtTotal;
    // End of variables declaration//GEN-END:variables
}